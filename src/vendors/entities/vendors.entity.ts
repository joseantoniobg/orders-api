import { ApiProperty } from '@nestjs/swagger';
import { Users } from '../../users/entities/users.entity';
import {
  Column,
  CreateDateColumn,
  DeleteDateColumn,
  Index,
  UpdateDateColumn,
  PrimaryGeneratedColumn,
  BaseEntity,
  Entity,
  OneToMany,
} from 'typeorm';

@Entity('vendors')
export class Vendors extends BaseEntity {
  @ApiProperty({
    description: 'autogenerated id for the vendor',
    example: 1,
  })
  @PrimaryGeneratedColumn('uuid')
  id_vendor: number;

  @ApiProperty({
    description: 'vendor CNPJ',
    example: '00000000000000',
  })
  @Index('ix_cnpj', { unique: true })
  @Column({ type: 'varchar', length: 14 })
  CNPJ: string;

  @ApiProperty({
    description: 'vendor description',
    example: 'supermercado aviacao',
  })
  @Column({ type: 'varchar', length: 60 })
  description: string;

  @OneToMany(() => Users, (user) => user.vendor)
  users: Users[];

  @ApiProperty({
    description: 'timestamp when the user was created',
  })
  @CreateDateColumn({ type: 'timestamp with time zone' })
  created_at: Date;

  @ApiProperty({
    description: 'timestamp when the user was last updated',
  })
  @UpdateDateColumn({ type: 'timestamp with time zone' })
  updated_at: Date;

  @ApiProperty({
    description: 'timestamp when the user was deleted',
    required: false,
  })
  @DeleteDateColumn({ type: 'timestamp with time zone' })
  deleted_at: Date;
}
