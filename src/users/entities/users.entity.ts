import { ApiProperty } from '@nestjs/swagger';
import { UsersRoles } from './roles.entity';
import { Vendors } from '../../vendors/entities/vendors.entity';
import {
  BaseEntity,
  Column,
  CreateDateColumn,
  DeleteDateColumn,
  Entity,
  Index,
  JoinColumn,
  JoinTable,
  ManyToMany,
  ManyToOne,
  PrimaryGeneratedColumn,
  UpdateDateColumn,
} from 'typeorm';

@Entity('users')
@Index(['login', 'password'])
export class Users extends BaseEntity {
  @ApiProperty({
    description: 'autogenerated id for the user',
    example: '6b5abe8c-a71f-4945-a9e8-90859472c50c',
  })
  @PrimaryGeneratedColumn('uuid')
  id_user: string;

  @ApiProperty({
    description: 'login for the user',
    example: 'joseantoniobg',
  })
  @Index('ix_login', { unique: true })
  @Column({ type: 'varchar', length: 50 })
  login: string;

  @ApiProperty({
    description: 'name for the user',
    example: 'jose antonio',
  })
  @Column({ type: 'varchar', length: 100 })
  name: string;

  @ApiProperty({
    description: 'email for the user',
    example: 'joseantoniobg@jabg.com.br',
  })
  @Index('ix_email', { unique: true })
  @Column({ type: 'varchar', length: 70 })
  email: string;

  @ApiProperty({
    description: 'status of the user',
    example: 1,
  })
  @Column({ type: 'int2', default: 1 })
  status: number;

  @ApiProperty({
    description: 'user password',
    example: 'vcuhwiufgyhwiru37y32978y2',
  })
  @Column({ type: 'varchar', length: 256 })
  password: string;

  @ApiProperty({
    description: 'date when the user was cancelled/discontinued',
  })
  @Column({ type: 'timestamp with time zone', nullable: true })
  cancelled_at: Date;

  @ManyToMany(() => UsersRoles, { eager: true })
  @JoinTable({ name: 'users_have_roles' })
  roles: UsersRoles[];

  @JoinColumn({ name: 'id_vendor' })
  @ManyToOne(() => Vendors, { eager: true, nullable: true })
  vendor: Vendors;

  @ApiProperty({
    description: 'timestamp when the user was created',
  })
  @CreateDateColumn({ type: 'timestamp with time zone' })
  created_at: Date;

  @ApiProperty({
    description: 'timestamp when the user was last updated',
  })
  @UpdateDateColumn({ type: 'timestamp with time zone' })
  updated_at: Date;

  @ApiProperty({
    description: 'timestamp when the user was deleted',
    required: false,
  })
  @DeleteDateColumn({ type: 'timestamp with time zone' })
  deleted_at: Date;
}
